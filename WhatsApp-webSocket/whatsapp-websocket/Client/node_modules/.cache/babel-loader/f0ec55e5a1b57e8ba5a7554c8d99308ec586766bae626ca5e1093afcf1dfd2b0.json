{"ast":null,"code":"var _jsxFileName = \"/Users/pavithranr/Documents/MyProjects-Git/WhatsApp-webSocket/whatsapp-websocket/src/App.js\",\n  _s = $RefreshSig$();\nimport Login from \"./Components/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useSelector } from \"react-redux\";\nimport Dashboard from \"./Components/Dashboard\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const userId = useSelector(state => state.userID);\n  const [showDashboard, setDashBoard] = useState(false);\n  useEffect(() => {\n    if (userId) {\n      setDashBoard(true);\n    }\n    if (localStorage.getItem(\"created-user-id\")) {\n      let a = localStorage.getItem(\"created-user-id\");\n      console.log(\"the loggeed storagae\", a);\n      setDashBoard(true);\n    }\n  });\n  console.log(\"The user id is \", userId);\n  if (localStorage.getItem(\"created-user-id\")) {}\n  // Ensure correct slice key\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showDashboard ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"IXFt7GeEB5slGDv7DgPVNWtyFz0=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","useSelector","Dashboard","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userId","state","userID","showDashboard","setDashBoard","localStorage","getItem","a","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pavithranr/Documents/MyProjects-Git/WhatsApp-webSocket/whatsapp-websocket/src/App.js"],"sourcesContent":["\nimport Login from \"./Components/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {  useSelector } from \"react-redux\";\nimport Dashboard from \"./Components/Dashboard\";\nimport { useEffect, useState } from \"react\";\nfunction App() {\n    const userId = useSelector((state) => state.userID);\n    const [showDashboard,setDashBoard] = useState(false);\n    useEffect(()=>{\n      if(userId){\n        setDashBoard(true);\n      }\n      if(localStorage.getItem(\"created-user-id\")){\n        let a = localStorage.getItem(\"created-user-id\");\n        console.log(\"the loggeed storagae\",a);\n        setDashBoard(true);\n        \n      }\n    })\n    console.log(\"The user id is \",userId);\n    if(localStorage.getItem(\"created-user-id\")){\n     \n    }\n     // Ensure correct slice key\n\n  return (\n  <>\n  {showDashboard ? <Dashboard/>:  <Login /> }\n  \n  </>\n   \n  );\n}\n\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAO,sCAAsC;AAC7C,SAAUC,WAAW,QAAQ,aAAa;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,MAAM,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EACnD,MAAM,CAACC,aAAa,EAACC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACpDD,SAAS,CAAC,MAAI;IACZ,IAAGQ,MAAM,EAAC;MACRI,YAAY,CAAC,IAAI,CAAC;IACpB;IACA,IAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAC;MACzC,IAAIC,CAAC,GAAGF,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;MAC/CE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACF,CAAC,CAAC;MACrCH,YAAY,CAAC,IAAI,CAAC;IAEpB;EACF,CAAC,CAAC;EACFI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACT,MAAM,CAAC;EACrC,IAAGK,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAC,CAE3C;EACC;;EAEH,oBACAX,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACCP,aAAa,gBAAGR,OAAA,CAACJ,SAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAAGnB,OAAA,CAACN,KAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAEvC,CAAC;AAGL;AAACf,EAAA,CA3BQD,GAAG;EAAA,QACOR,WAAW;AAAA;AAAAyB,EAAA,GADrBjB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}