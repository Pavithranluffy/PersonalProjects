{"ast":null,"code":"var _jsxFileName = \"/Users/pavithranr/Documents/MyProjects-Git/WhatsApp-webSocket/whatsapp-websocket/src/Components/ConversationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Modal } from \"react-bootstrap\";\nimport { useContact } from './context/ContactsProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConversationModal() {\n  _s();\n  const [selectedcontactsid, setSelectedContactsids] = useState([]);\n  const {\n    contact\n  } = useContact();\n  function handleSubmit() {}\n  function handleCheckchange(contactid) {\n    setSelectedContactsids(prevselectedid => {\n      //First We are Checking that the contacts is already in the list \n      if (prevselectedid.includes(contactid)) {\n        //if already there means we need to return the list by filtering it out which is already there \n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contact.map(item => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: item.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedcontactsid.includes(item.id),\n            onChange: handleCheckchange(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-2\",\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ConversationModal, \"NHVwHUX50L59r0K96FELyDCoFKk=\", false, function () {\n  return [useContact];\n});\n_c = ConversationModal;\nvar _c;\n$RefreshReg$(_c, \"ConversationModal\");","map":{"version":3,"names":["React","useState","Button","Form","FormGroup","Modal","useContact","jsxDEV","_jsxDEV","Fragment","_Fragment","ConversationModal","_s","selectedcontactsid","setSelectedContactsids","contact","handleSubmit","handleCheckchange","contactid","prevselectedid","includes","children","Header","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","map","item","Group","controlId","id","Check","type","value","onChange","className","_c","$RefreshReg$"],"sources":["/Users/pavithranr/Documents/MyProjects-Git/WhatsApp-webSocket/whatsapp-websocket/src/Components/ConversationModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Modal } from \"react-bootstrap\";\nimport { useContact } from './context/ContactsProvider';\nexport default function ConversationModal(){\n    const [selectedcontactsid , setSelectedContactsids] = useState([]);\n    const {contact} = useContact();\n    function handleSubmit(){\n\n    }\n    function handleCheckchange(contactid){\n        setSelectedContactsids(prevselectedid =>{\n            //First We are Checking that the contacts is already in the list \n            if(prevselectedid.includes(contactid)){\n                //if already there means we need to return the list by filtering it out which is already there \n\n                \n            }\n        })\n\n    }\n    return(\n        <>\n        <Modal.Header closeButton>\n            Create Button\n        </Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={handleSubmit}>{\n                contact.map(item =>(\n                    <Form.Group controlId={item.id} key={item.id}>\n                        <Form.Check\n                        type='checkbox'\n                        value={selectedcontactsid.includes(item.id)}\n                        onChange={handleCheckchange(item.id)}\n                        >\n\n                        </Form.Check>\n\n                    </Form.Group>\n                ))\n                }\n           \n                <Button className=\"mt-2\" type=\"submit\">\n                     Create\n                </Button>\n            </Form>\n        </Modal.Body>\n        \n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,KAAK,QAAQ,iBAAiB;AAChE,SAASC,UAAU,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxD,eAAe,SAASC,iBAAiBA,CAAA,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,kBAAkB,EAAGC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM;IAACc;EAAO,CAAC,GAAGT,UAAU,CAAC,CAAC;EAC9B,SAASU,YAAYA,CAAA,EAAE,CAEvB;EACA,SAASC,iBAAiBA,CAACC,SAAS,EAAC;IACjCJ,sBAAsB,CAACK,cAAc,IAAG;MACpC;MACA,IAAGA,cAAc,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAC;QAClC;MAAA;IAIR,CAAC,CAAC;EAEN;EACA,oBACIV,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACAb,OAAA,CAACH,KAAK,CAACiB,MAAM;MAACC,WAAW;MAAAF,QAAA,EAAC;IAE1B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACfnB,OAAA,CAACH,KAAK,CAACuB,IAAI;MAAAP,QAAA,eACPb,OAAA,CAACL,IAAI;QAAC0B,QAAQ,EAAEb,YAAa;QAAAK,QAAA,GACzBN,OAAO,CAACe,GAAG,CAACC,IAAI,iBACZvB,OAAA,CAACL,IAAI,CAAC6B,KAAK;UAACC,SAAS,EAAEF,IAAI,CAACG,EAAG;UAAAb,QAAA,eAC3Bb,OAAA,CAACL,IAAI,CAACgC,KAAK;YACXC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAExB,kBAAkB,CAACO,QAAQ,CAACW,IAAI,CAACG,EAAE,CAAE;YAC5CI,QAAQ,EAAErB,iBAAiB,CAACc,IAAI,CAACG,EAAE;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGzB;QAAC,GAPoBI,IAAI,CAACG,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAShC,CACf,CAAC,eAGFnB,OAAA,CAACN,MAAM;UAACqC,SAAS,EAAC,MAAM;UAACH,IAAI,EAAC,QAAQ;UAAAf,QAAA,EAAC;QAEvC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eAEX,CAAC;AAEX;AAACf,EAAA,CA9CuBD,iBAAiB;EAAA,QAEnBL,UAAU;AAAA;AAAAkC,EAAA,GAFR7B,iBAAiB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}